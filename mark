#!/bin/bash

read -r -d '' usage << EOM
mark [-d] mark_name [mark_destination]

Set a bookmark at \$mk/mark_name that directs to the current directory or mark_destination

OPTIONS
    -d
        Delete bookmark with mark_name instead of normal functionality
EOM

# Note: use `-P` flag when `cd` into symlink to resolve dot-dot. Otherwise, your pwd will look
# like ~/.mk/mark_name instead of ~/some/directory/mark_name, and when you try to go back with
# `cd ..` you will end up in the bookmark directory

# Tip: you can bookmark the `.mk` folder in your file explorer to access it easily with GUI too.
# on Ubuntu, you do this by dragging the directory onto the sidebar.

# Enum indicating mode of command
# 0: new bookmark; 1: delete bookmark
readonly MODE_NEW=0;
readonly MODE_DEL=1;
readonly MODE_HELP=2;
mode=$MODE_NEW

while getopts "dh" opt; do
    case $opt in
	d)
        mode=$MODE_DEL
        shift 1
	    ;;
    h)
        mode=$MODE_HELP
        shift 1
	    ;;
	\?)
	    echo "Invalid option: -$OPTARG" >&2
        echo "$usage" >&2
        exit 1
	    ;;
    esac
done


# Set default bookmark directory where bookmarks (symlinks) are stored
[ -n "$mark_folder" ] || mark_folder="$HOME/.mk"
[ -d "$mark_folder" ] || mkdir "$mark_folder"

# For easy access of bookmarks: $mk/mark_name
export mk="$mark_folder"

mark_path="$mark_folder/$1"
mark_dest="$(pwd)/$2"

case $mode in
    $MODE_HELP ) # Print usage
        echo "$usage" >&2
        ;;
    $MODE_NEW ) # Create new bookmark
        # TODO: Bookmark Description <26-01-23, xydxydxyd1> #

        # Validate input
        if [[ "$#" -gt 2 || "$#" -eq 0 ]]; then
            echo "Illegal number of parameters" >&2
            echo "$usage" >&2
            exit 1
        fi

        if [[ ! -e $mark_dest ]]; then
            echo "$mark_dest does not exist. Aborting..."
            return
        fi

        # Option for overriding existing bookmark
        if [[ -e $mark_path ]]; then
            read -r -p 'Mark already exists. Override (y/n)? ' yn
            if [[ "$yn" != 'y' ]]; then
                echo 'Aborting...'
                exit 1
            fi
            rm -f "$mark_path"
        fi

        ln -sr "$mark_dest" "$mark_path"
        echo "Symlink created: $mark_path --> $mark_dest"
        ;;
    $MODE_DEL ) # Delete bookmark
        # Validate input
        if [[ "$#" -ne 1 ]]; then
            echo "Illegal number of parameters" >&2
            echo "$usage" >&2
            exit 1
        fi

        if [[ ! -e "$mark_path" ]]; then
            echo "$mark_path does not exist"
            exit 1
        fi

        read -r -p "Remove $mark_path? " yn
        if [[ "$yn" != 'y' ]]; then
            echo "Aborting..."
        fi
        rm -f "$mark_path"
        ;;
esac

exit 0
