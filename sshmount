#!/bin/bash

#Note:
# This asumes you have some clean tag for logging into the remote host
# If, for example you have user@foo.org:22 that will make for an odd name directory
# Just put it in .ssh/config

if [ "$1" == "" ]
then
  echo Usage: sshmount host [ssh_options] - Mount remote home folder on ~/remote/host and log in
  echo or: sshunmount host - Remove mount from ~/remote/host
  exit 1
fi


# if called as sshunmount...
if [ $(basename "$0")  == sshunmount ]
then
  echo Unmounting... 1>&2
  fusermount -u "$HOME/remote/$1"
  exit $?
fi  
  
# normal call...
if [ -d "$HOME/remote/$1" ]  # does directory exist?
then
  if mount | grep "$HOME/remote/$1 "  # already mounted?
  then
    echo Already mounted 1>&2
  else
    sshfs -o reconnect $1: $HOME/remote/$1   # mount
  fi
else
  echo No remote directory ~/remote/$1 exists 1>&2
fi  
ssh $@   # do log in
# could do fusermount -u on the mount directory BUT...
# sort of ugly if more than one ssh is open
# but without it, the sshfs will persist unless you explicitly unmount
# instead call script as sshunmount (e.g., ln -s /usr/bin/sshmount /usr/bin/sshunmount)
